"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DateTime = void 0;
const luxon_1 = require("luxon");
const units = {
    y: 'years',
    year: 'years',
    years: 'years',
    M: 'months',
    month: 'months',
    months: 'months',
    q: 'quarters',
    quarter: 'quarters',
    quarters: 'quarters',
    w: 'weeks',
    week: 'weeks',
    weeks: 'weeks',
    d: 'days',
    day: 'days',
    days: 'days',
    m: 'minutes',
    minute: 'minutes',
    minutes: 'minutes',
    h: 'hours',
    hour: 'hours',
    hours: 'hours',
    s: 'seconds',
    second: 'seconds',
    seconds: 'seconds'
};
class DateTime {
    constructor(value, options) {
        if (value instanceof Date) {
            this._dt = luxon_1.DateTime.fromJSDate(value);
        }
        else if (value instanceof luxon_1.DateTime) {
            this._dt = value;
        }
        else if (value === undefined) {
            this._dt = luxon_1.DateTime.now();
        }
        else {
            this._dt = luxon_1.DateTime.fromISO(value, options);
        }
    }
    utc() {
        const date = this._dt.toUTC();
        return new DateTime(date);
    }
    toString() {
        return this._dt.toString();
    }
    toJSON() {
        return this._dt.toJSON();
    }
    toJSDate() {
        return this._dt.toJSDate();
    }
    add(value = 0, unit) {
        const key = units[unit] || 'days';
        const date = this._dt.plus({ [key]: value });
        return new DateTime(date);
    }
    subtract(value = 0, unit) {
        const key = units[unit] || 'days';
        const date = this._dt.minus({ [key]: value });
        return new DateTime(date);
    }
    format(format) {
        format = format.replace(/\[/g, "'").replace(/\]/g, "'");
        return this._dt.toFormat(format);
    }
}
exports.DateTime = DateTime;
