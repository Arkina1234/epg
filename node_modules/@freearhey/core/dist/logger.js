"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Logger = void 0;
const signale_1 = require("signale");
const object_treeify_1 = __importDefault(require("object-treeify"));
class Logger {
    constructor(options) {
        this.logger = new signale_1.Signale(options);
        this.logger.config({
            displayLabel: false,
            displayScope: false,
            displayBadge: false
        });
    }
    tree(object) {
        const output = (0, object_treeify_1.default)(object, {
            spacerNeighbour: '  ',
            keyNoNeighbour: '  ',
            keyNeighbour: '  '
        });
        this.info(output);
    }
    await(...args) {
        this.logger.await(...args);
    }
    complete(...args) {
        this.logger.complete(...args);
    }
    debug(...args) {
        this.logger.debug(...args);
    }
    fatal(...args) {
        this.logger.fatal(...args);
    }
    fav(...args) {
        this.logger.fav(...args);
    }
    note(...args) {
        this.logger.note(...args);
    }
    pause(...args) {
        this.logger.pause(...args);
    }
    pending(...args) {
        this.logger.pending(...args);
    }
    star(...args) {
        this.logger.star(...args);
    }
    warn(...args) {
        this.logger.warn(...args);
    }
    watch(...args) {
        this.logger.watch(...args);
    }
    log(...args) {
        this.logger.log(...args);
    }
    info(...args) {
        this.logger.info(...args);
    }
    error(...args) {
        this.logger.error(...args);
    }
    start(...args) {
        this.logger.start(...args);
    }
    success(...args) {
        this.logger.success(...args);
    }
}
exports.Logger = Logger;
